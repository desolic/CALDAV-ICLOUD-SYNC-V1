#!/usr/bin/env bash
set -e

# Pfade
CONFIG_DIR="/config"
CONFIG_PATH="$CONFIG_DIR/config"
TEMPLATE_PATH="/config.template"
LOG_DIR="$CONFIG_DIR/logs"
STATUS_DIR="$CONFIG_DIR/status"

# Ordner erstellen
mkdir -p "$CONFIG_DIR" "$LOG_DIR" "$STATUS_DIR"
echo "‚úÖ Ordner erstellt: $CONFIG_DIR, $LOG_DIR, $STATUS_DIR"

LOG_FILE="$LOG_DIR/sync.log"

# Config erstellen oder vorhandene Config verwenden
if [ ! -f "$CONFIG_PATH" ]; then
    echo "‚öôÔ∏è  Keine Konfiguration gefunden, erstelle neue aus Template ..." | tee -a "$LOG_FILE"
    
    # Variablen aus Template ersetzen und als config speichern
    envsubst < "$TEMPLATE_PATH" > "$CONFIG_PATH"
    echo "‚úÖ Config aus Template erstellt: $CONFIG_PATH" | tee -a "$LOG_FILE"
    
    echo "üîç F√ºhre automatische iCloud-Discovery durch ..." | tee -a "$LOG_FILE"
    vdirsyncer discover --config "$CONFIG_PATH" 2>&1 | tee -a "$LOG_FILE" || \
        echo "‚ö†Ô∏è  Discovery konnte nicht abgeschlossen werden, bitte Config pr√ºfen." | tee -a "$LOG_FILE"
    echo "‚úÖ Discovery abgeschlossen" | tee -a "$LOG_FILE"
else
    echo "‚ÑπÔ∏è  Vorhandene Config gefunden: $CONFIG_PATH" | tee -a "$LOG_FILE"
fi

echo "üöÄ Starte bidirektionalen Synchronisation alle 30 Sekunden ..." | tee -a "$LOG_FILE"

while true; do
    echo "üîÑ Sync gestartet: $(date)" | tee -a "$LOG_FILE"
    
    # Synology gewinnt bei Konflikten
    vdirsyncer sync --config "$CONFIG_PATH" icloud-synology --force-b-direction 2>&1 | tee -a "$LOG_FILE"
    
    echo "‚úÖ Sync abgeschlossen: $(date)" | tee -a "$LOG_FILE"
    echo "‚è± Warten 30 Sekunden ..." | tee -a "$LOG_FILE"
    sleep 30
done
